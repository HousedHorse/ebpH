# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui',
# licensing of 'mainwindow.ui' applies.
#
# Created: Fri May 24 13:37:22 2019
#      by: pyside2-uic  running on PySide2 5.12.0
#
# WARNING! All changes made in this file will be lost!

from PySide2 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(933, 723)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/img/assets/img/logos/favicon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setWindowOpacity(1.0)
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.event_log = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.event_log.setReadOnly(True)
        self.event_log.setBackgroundVisible(False)
        self.event_log.setObjectName("event_log")
        self.gridLayout.addWidget(self.event_log, 1, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 933, 29))
        self.menubar.setObjectName("menubar")
        self.menu_File = QtWidgets.QMenu(self.menubar)
        self.menu_File.setObjectName("menu_File")
        self.menuExport = QtWidgets.QMenu(self.menu_File)
        self.menuExport.setObjectName("menuExport")
        self.menu_Settings = QtWidgets.QMenu(self.menubar)
        self.menu_Settings.setObjectName("menu_Settings")
        self.menu_Help = QtWidgets.QMenu(self.menubar)
        self.menu_Help.setObjectName("menu_Help")
        self.menu_Actions = QtWidgets.QMenu(self.menubar)
        self.menu_Actions.setObjectName("menu_Actions")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.action_About = QtWidgets.QAction(MainWindow)
        self.action_About.setObjectName("action_About")
        self.actionebpH_Help = QtWidgets.QAction(MainWindow)
        self.actionebpH_Help.setObjectName("actionebpH_Help")
        self.action_Quit = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/img/assets/img/icons/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Quit.setIcon(icon1)
        self.action_Quit.setObjectName("action_Quit")
        self.action_Start_Monitoring = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/img/assets/img/icons/eye.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Start_Monitoring.setIcon(icon2)
        self.action_Start_Monitoring.setObjectName("action_Start_Monitoring")
        self.action_Stop_Monitoring = QtWidgets.QAction(MainWindow)
        self.action_Stop_Monitoring.setEnabled(False)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/img/assets/img/icons/hide.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Stop_Monitoring.setIcon(icon3)
        self.action_Stop_Monitoring.setObjectName("action_Stop_Monitoring")
        self.action_View_Modify_Profile = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/img/assets/img/icons/browser.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_View_Modify_Profile.setIcon(icon4)
        self.action_View_Modify_Profile.setObjectName("action_View_Modify_Profile")
        self.action_Force_Save_Profiles = QtWidgets.QAction(MainWindow)
        self.action_Force_Save_Profiles.setObjectName("action_Force_Save_Profiles")
        self.action_Preferences = QtWidgets.QAction(MainWindow)
        self.action_Preferences.setObjectName("action_Preferences")
        self.actionExport_Logs = QtWidgets.QAction(MainWindow)
        self.actionExport_Logs.setObjectName("actionExport_Logs")
        self.actionExport_Statistics = QtWidgets.QAction(MainWindow)
        self.actionExport_Statistics.setObjectName("actionExport_Statistics")
        self.menuExport.addAction(self.actionExport_Logs)
        self.menuExport.addAction(self.actionExport_Statistics)
        self.menu_File.addAction(self.action_Force_Save_Profiles)
        self.menu_File.addAction(self.menuExport.menuAction())
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_Quit)
        self.menu_Settings.addAction(self.action_Preferences)
        self.menu_Help.addAction(self.actionebpH_Help)
        self.menu_Help.addSeparator()
        self.menu_Help.addAction(self.action_About)
        self.menu_Actions.addAction(self.action_Start_Monitoring)
        self.menu_Actions.addAction(self.action_Stop_Monitoring)
        self.menu_Actions.addSeparator()
        self.menu_Actions.addAction(self.action_View_Modify_Profile)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_Actions.menuAction())
        self.menubar.addAction(self.menu_Settings.menuAction())
        self.menubar.addAction(self.menu_Help.menuAction())
        self.toolBar.addAction(self.action_Start_Monitoring)
        self.toolBar.addAction(self.action_Stop_Monitoring)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_View_Modify_Profile)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_Quit)

        self.retranslateUi(MainWindow)
        QtCore.QObject.connect(self.action_Quit, QtCore.SIGNAL("triggered()"), MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QtWidgets.QApplication.translate("MainWindow", "ebpH", None, -1))
        self.event_log.setStatusTip(QtWidgets.QApplication.translate("MainWindow", "ebpH event log", None, -1))
        self.label.setText(QtWidgets.QApplication.translate("MainWindow", "ebpH Log", None, -1))
        self.menu_File.setTitle(QtWidgets.QApplication.translate("MainWindow", "&File", None, -1))
        self.menuExport.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Export", None, -1))
        self.menu_Settings.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Settings", None, -1))
        self.menu_Help.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Help", None, -1))
        self.menu_Actions.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Monitoring", None, -1))
        self.toolBar.setWindowTitle(QtWidgets.QApplication.translate("MainWindow", "toolBar", None, -1))
        self.action_About.setText(QtWidgets.QApplication.translate("MainWindow", "&About ebpH", None, -1))
        self.actionebpH_Help.setText(QtWidgets.QApplication.translate("MainWindow", "ebpH &Help", None, -1))
        self.actionebpH_Help.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+H", None, -1))
        self.action_Quit.setText(QtWidgets.QApplication.translate("MainWindow", "&Quit", None, -1))
        self.action_Quit.setStatusTip(QtWidgets.QApplication.translate("MainWindow", "Exit the application", None, -1))
        self.action_Quit.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+Q", None, -1))
        self.action_Start_Monitoring.setText(QtWidgets.QApplication.translate("MainWindow", "&Start Monitoring", None, -1))
        self.action_Start_Monitoring.setStatusTip(QtWidgets.QApplication.translate("MainWindow", "Start monitoring processes", None, -1))
        self.action_Start_Monitoring.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+Shift+S", None, -1))
        self.action_Stop_Monitoring.setText(QtWidgets.QApplication.translate("MainWindow", "&Stop Monitoring", None, -1))
        self.action_Stop_Monitoring.setStatusTip(QtWidgets.QApplication.translate("MainWindow", "Stop monitoring processes", None, -1))
        self.action_Stop_Monitoring.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+Shift+S", None, -1))
        self.action_View_Modify_Profile.setText(QtWidgets.QApplication.translate("MainWindow", "View/Modify &Profile", None, -1))
        self.action_View_Modify_Profile.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+E", None, -1))
        self.action_Force_Save_Profiles.setText(QtWidgets.QApplication.translate("MainWindow", "Force &Save Profiles", None, -1))
        self.action_Force_Save_Profiles.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+S", None, -1))
        self.action_Preferences.setText(QtWidgets.QApplication.translate("MainWindow", "&Preferences", None, -1))
        self.actionExport_Logs.setText(QtWidgets.QApplication.translate("MainWindow", "Export &Logs", None, -1))
        self.actionExport_Logs.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+E, Ctrl+L", None, -1))
        self.actionExport_Statistics.setText(QtWidgets.QApplication.translate("MainWindow", "Export &Statistics", None, -1))
        self.actionExport_Statistics.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+E, Ctrl+S", None, -1))

import resources_rc
